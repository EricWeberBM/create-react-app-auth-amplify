type Provider @aws_iam @aws_api_key {
  id: ID!
  Details: Details
  EmailsWeReceive: EmailsWeReceive
  Properties: Properties
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Details @aws_api_key @aws_iam {
  Name: String
  Description: String
  HeadOfficeLocation: validHeadOfficeLocation
  InfolineMail: String
  ComplaintMail: String
  Website: String
}

type EmailsWeReceive @aws_api_key @aws_iam {
  Voucher: Boolean
  Cancellation: Boolean
  Confirmation: Boolean
}

type Properties @aws_api_key @aws_iam {
  IsSupplyingCars: Boolean
  ShouldPerformPriceCheck: Boolean
  HasCustomLookupPage: Boolean
}

enum validHeadOfficeLocation {
  DE
  EU
  NONEU
}

input DetailsInput {
  Name: String
  Description: String
  HeadOfficeLocation: validHeadOfficeLocation
  InfolineMail: String
  ComplaintMail: String
  Website: String
}

input EmailsWeReceiveInput {
  Voucher: Boolean
  Cancellation: Boolean
  Confirmation: Boolean
}

input PropertiesInput {
  IsSupplyingCars: Boolean
  ShouldPerformPriceCheck: Boolean
  HasCustomLookupPage: Boolean
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelProviderConnection @aws_api_key @aws_iam {
  items: [Provider]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelProviderFilterInput {
  id: ModelIDInput
  and: [ModelProviderFilterInput]
  or: [ModelProviderFilterInput]
  not: ModelProviderFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  getProvider(id: ID!): Provider @aws_api_key @aws_iam
  listProviders(filter: ModelProviderFilterInput, limit: Int, nextToken: String): ModelProviderConnection @aws_api_key @aws_iam
  syncProviders(filter: ModelProviderFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelProviderConnection @aws_api_key @aws_iam
}

input CreateProviderInput {
  id: ID
  Details: DetailsInput
  EmailsWeReceive: EmailsWeReceiveInput
  Properties: PropertiesInput
  _version: Int
}

input UpdateProviderInput {
  id: ID!
  Details: DetailsInput
  EmailsWeReceive: EmailsWeReceiveInput
  Properties: PropertiesInput
  _version: Int
}

input DeleteProviderInput {
  id: ID!
  _version: Int
}

type Mutation {
  createProvider(input: CreateProviderInput!, condition: ModelProviderConditionInput): Provider @aws_api_key @aws_iam
  updateProvider(input: UpdateProviderInput!, condition: ModelProviderConditionInput): Provider @aws_api_key @aws_iam
  deleteProvider(input: DeleteProviderInput!, condition: ModelProviderConditionInput): Provider @aws_api_key @aws_iam
}

input ModelProviderConditionInput {
  and: [ModelProviderConditionInput]
  or: [ModelProviderConditionInput]
  not: ModelProviderConditionInput
}

type Subscription {
  onCreateProvider: Provider @aws_subscribe(mutations: ["createProvider"]) @aws_api_key @aws_iam
  onUpdateProvider: Provider @aws_subscribe(mutations: ["updateProvider"]) @aws_api_key @aws_iam
  onDeleteProvider: Provider @aws_subscribe(mutations: ["deleteProvider"]) @aws_api_key @aws_iam
}
